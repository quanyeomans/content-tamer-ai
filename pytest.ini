[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
# Configure pytest for Rich display compatibility 
addopts = -v --tb=short --strict-markers -p no:cacheprovider --capture=no
# Set PYTHONPATH to include src directory for imports
pythonpath = src
# NOTE: pytest has I/O capture system issues causing "ValueError: I/O operation on closed file"  
# Fixed with --capture=no to disable output capture and prevent Rich I/O conflicts
# Alternative: Use "python -m unittest discover tests -v" for reliable test execution
markers =
    unit: Unit tests for individual components
    integration: Integration tests for end-to-end workflows
    contract: Contract tests for component agreements
    golden_path: Tests for most common success scenarios
    error_condition: Tests for error scenarios and recovery
    bdd: Behavior-driven development user scenarios
    regression: Tests that prevent specific bugs from recurring
    critical: Critical path tests that must always pass
    slow: Tests that take longer to run (>10 seconds)
    fast: Tests that run quickly (<2 seconds)
    medium: Tests with moderate execution time (2-10 seconds)
    e2e: End-to-end tests for complete user workflows  
    security: Security-focused tests
    performance: Performance and load tests
    ml_heavy: Tests that load ML models (spaCy, transformers, sklearn)
    infrastructure: Infrastructure and utility tests
    domain_content: Content domain tests
    domain_organization: Organization domain tests (typically slow)
    domain_ai: AI integration domain tests